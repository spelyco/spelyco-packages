name: Publish Package (Beta)

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Package to publish (e.g., react-core)'
        required: true
        type: choice
        options:
          - react-core
          - react-native-core
          - strapi-core
          # Add other packages here
      registry:
        description: 'NPM Registry'
        required: true
        default: 'https://registry.npmjs.org'
        type: string

jobs:
  publish-beta:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: ${{ inputs.registry }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Get package version
        id: package_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./packages/${{ inputs.package_name }}/package.json').version")-beta.$(date +'%Y%m%d%H%M%S')
          echo "version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

      - name: Clean install
        run: |
          cd packages/${{ inputs.package_name }}
          rm -rf node_modules
          bun clean

      - name: Install package dependencies
        run: |
          cd packages/${{ inputs.package_name }}
          bun install

      - name: Build package
        run: |
          cd packages/${{ inputs.package_name }}
          bun run build

      - name: Update package version
        run: |
          cd packages/${{ inputs.package_name }}
          node -e "const pkg = require('./package.json'); pkg.version = '${{ steps.package_version.outputs.version }}'; require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, '\t') + '\n')"

      - name: Check package
        run: |
          cd packages/${{ inputs.package_name }}
          npm pack --dry-run

      - name: Publish package
        run: |
          cd packages/${{ inputs.package_name }}
          npm publish --access public --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: success()
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag ${{ inputs.package_name }}@${{ steps.package_version.outputs.version }}
          git push origin ${{ inputs.package_name }}@${{ steps.package_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 